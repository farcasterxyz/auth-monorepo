name: CI
on:
  # CI is run on main because new branches can only access caches from master, not previous branches.
  # So building on master allows new PR's to get the cache from before.
  push:
    branches: [main]
  pull_request:
    branches: [main]

# prevent multiple simultaneous test runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  analyze:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Restore cached dependencies for Node modules.
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}--node--${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Run build
        run: yarn build

      - name: Run linter
        run: yarn lint:ci

  test:
    timeout-minutes: 10
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        node_version: [18, 20]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: Restore cached dependencies for Node modules.
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}--node--${{ matrix.node_version}}--${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Run build
        run: yarn build

      - name: Log in to Docker Hub to avoid rate limiting
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.FARCASTERXYZ_DOCKER_HUB_USER }}
          password: ${{ secrets.FARCASTERXYZ_DOCKER_HUB_TOKEN }}

      - name: Start background services
        shell: bash
        run: docker compose -f ./apps/relay/docker-compose.yml up --build --detach redis

      - name: Run tests
        run: yarn test:ci

      - name: Upload coverage results
        uses: codecov/codecov-action@v3
